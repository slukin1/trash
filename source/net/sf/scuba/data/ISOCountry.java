package net.sf.scuba.data;

import com.engagelab.privates.core.api.MTCorePrivatesApi;
import com.google.zxing.client.result.ExpandedProductParsedResult;
import com.hbg.lib.network.pro.core.bean.DefiChainInfo;
import com.jumio.analytics.MobileEvents;
import com.sumsub.sns.internal.core.common.n0;
import com.sumsub.sns.internal.ml.autocapture.b;
import com.tencent.android.tpns.mqtt.internal.security.SSLSocketFactoryFactory;
import com.tencent.liteav.TXLiteAVCode;
import com.tencent.qcloud.tuikit.timcommon.bean.TUIMessageBean;
import com.tencent.qcloud.tuikit.tuichat.bean.message.TipsMessageBean;
import com.tencent.rtmp.TXLivePushConfig;
import com.tencent.thumbplayer.tcmedia.api.TPOptionalID;
import com.tencent.thumbplayer.tcmedia.core.common.TPCodecParamers;
import com.tencent.thumbplayer.tcmedia.core.player.TPNativePlayerInitConfig;
import com.tencent.ugc.datereport.UGCDataReportDef;
import com.youth.banner.config.BannerConfig;

public class ISOCountry extends Country {
    public static final Country AD;
    public static final Country AE;
    public static final Country AF;
    public static final Country AG;
    public static final Country AI;
    public static final Country AL;
    public static final Country AM;
    public static final Country AN;
    public static final Country AO;
    public static final Country AQ;
    public static final Country AR;
    public static final Country AS;
    public static final Country AT;
    public static final Country AU;
    public static final Country AW;
    public static final Country AX;
    public static final Country AZ;
    public static final Country BA;
    public static final Country BB;
    public static final Country BD;
    public static final Country BE;
    public static final Country BF;
    public static final Country BG;
    public static final Country BH;
    public static final Country BI;
    public static final Country BJ;
    public static final Country BL;
    public static final Country BM;
    public static final Country BN;
    public static final Country BO;
    public static final Country BR;
    public static final Country BS;
    public static final Country BT;
    public static final Country BV;
    public static final Country BW;
    public static final Country BY;
    public static final Country BZ;
    public static final Country CA;
    public static final Country CC;
    public static final Country CD;
    public static final Country CF;
    public static final Country CG;
    public static final Country CH;
    public static final Country CI;
    public static final Country CK;
    public static final Country CL;
    public static final Country CM;
    public static final Country CN;
    public static final Country CO;
    public static final Country CR;
    public static final Country CU;
    public static final Country CV;
    public static final Country CX;
    public static final Country CY;
    public static final Country CZ;
    public static final Country DE;
    public static final Country DJ;
    public static final Country DK;
    public static final Country DM;
    public static final Country DO;
    public static final Country DZ;
    public static final Country EC;
    public static final Country EE;
    public static final Country EG;
    public static final Country EH;
    public static final Country ER;
    public static final Country ES;
    public static final Country ET;
    public static final Country FI;
    public static final Country FJ;
    public static final Country FK;
    public static final Country FM;
    public static final Country FO;
    public static final Country FR;
    public static final Country GA;
    public static final Country GB;
    public static final Country GD;
    public static final Country GE;
    public static final Country GF;
    public static final Country GG;
    public static final Country GH;
    public static final Country GI;
    public static final Country GL;
    public static final Country GM;
    public static final Country GN;
    public static final Country GP;
    public static final Country GQ;
    public static final Country GR;
    public static final Country GS;
    public static final Country GT;
    public static final Country GU;
    public static final Country GW;
    public static final Country GY;
    public static final Country HK;
    public static final Country HM;
    public static final Country HN;
    public static final Country HR;
    public static final Country HT;
    public static final Country HU;
    public static final Country ID;
    public static final Country IE;
    public static final Country IL;
    public static final Country IM;
    public static final Country IN;
    public static final Country IO;
    public static final Country IQ;
    public static final Country IR;
    public static final Country IS;
    public static final Country IT;
    public static final Country JE;
    public static final Country JM;
    public static final Country JO;
    public static final Country JP;
    public static final Country KE;
    public static final Country KG;
    public static final Country KH;
    public static final Country KI;
    public static final Country KM;
    public static final Country KN;
    public static final Country KP;
    public static final Country KR;
    public static final Country KW;
    public static final Country KY;
    public static final Country KZ;
    public static final Country LA;
    public static final Country LB;
    public static final Country LC;
    public static final Country LI;
    public static final Country LK;
    public static final Country LR;
    public static final Country LS;
    public static final Country LT;
    public static final Country LU;
    public static final Country LV;
    public static final Country LY;
    public static final Country MA;
    public static final Country MC;
    public static final Country MD;
    public static final Country ME;
    public static final Country MF;
    public static final Country MG;
    public static final Country MH;
    public static final Country MK;
    public static final Country ML;
    public static final Country MM;
    public static final Country MN;
    public static final Country MO;
    public static final Country MP;
    public static final Country MQ;
    public static final Country MR;
    public static final Country MS;
    public static final Country MT;
    public static final Country MU;
    public static final Country MV;
    public static final Country MW;
    public static final Country MX;
    public static final Country MY;
    public static final Country MZ;
    public static final Country NA;
    public static final Country NC;
    public static final Country NE;
    public static final Country NF;
    public static final Country NG;
    public static final Country NI;
    public static final Country NL;
    public static final Country NO;
    public static final Country NP;
    public static final Country NR;
    public static final Country NU;
    public static final Country NZ;
    public static final Country OM;
    public static final Country PA;
    public static final Country PE;
    public static final Country PF;
    public static final Country PG;
    public static final Country PH;
    public static final Country PK;
    public static final Country PL;
    public static final Country PM;
    public static final Country PN;
    public static final Country PR;
    public static final Country PS;
    public static final Country PT;
    public static final Country PW;
    public static final Country PY;
    public static final Country QA;
    public static final Country RE;
    public static final Country RO;
    public static final Country RS;
    public static final Country RU;
    public static final Country RW;
    public static final Country SA;
    public static final Country SB;
    public static final Country SC;
    public static final Country SD;
    public static final Country SE;
    public static final Country SG;
    public static final Country SH;
    public static final Country SI;
    public static final Country SJ;
    public static final Country SK;
    public static final Country SL;
    public static final Country SM;
    public static final Country SN;
    public static final Country SO;
    public static final Country SR;
    public static final Country ST;
    public static final Country SV;
    public static final Country SY;
    public static final Country SZ;
    public static final Country TC;
    public static final Country TD;
    public static final Country TF;
    public static final Country TG;
    public static final Country TH;
    public static final Country TJ;
    public static final Country TK;
    public static final Country TL;
    public static final Country TM;
    public static final Country TN;
    public static final Country TO;
    public static final Country TR;
    public static final Country TT;
    public static final Country TV;
    public static final Country TW;
    public static final Country TZ;
    public static final Country UA;
    public static final Country UG;
    public static final Country UM;
    public static final Country US;
    public static final Country UY;
    public static final Country UZ;
    public static final Country VA;
    private static final Country[] VALUES;
    public static final Country VC;
    public static final Country VE;
    public static final Country VG;
    public static final Country VI;
    public static final Country VN;
    public static final Country VU;
    public static final Country WF;
    public static final Country WS;
    public static final Country YE;
    public static final Country YT;
    public static final Country ZA;
    public static final Country ZM;
    public static final Country ZW;
    private static final long serialVersionUID = 7220597933847617859L;
    private String alpha2Code;
    private String alpha3Code;
    private int code;
    private String name;
    private String nationality;

    static {
        ISOCountry iSOCountry = new ISOCountry(32, "AD", "AND", "Andorra", "Andorran");
        AD = iSOCountry;
        ISOCountry iSOCountry2 = new ISOCountry(1924, "AE", "ARE", "United Arab Emirates", "Emirati, Emirian");
        AE = iSOCountry2;
        ISOCountry iSOCountry3 = new ISOCountry(4, "AF", "AFG", "Afghanistan", "Afghan");
        AF = iSOCountry3;
        ISOCountry iSOCountry4 = new ISOCountry(40, "AG", "ATG", "Antigua and Barbuda", "Antiguan, Barbudan");
        AG = iSOCountry4;
        ISOCountry iSOCountry5 = new ISOCountry(1632, "AI", "AIA", "Anguilla", "Anguillan");
        AI = iSOCountry5;
        ISOCountry iSOCountry6 = new ISOCountry(8, "AL", "ALB", "Albania", "Albanian");
        AL = iSOCountry6;
        ISOCountry iSOCountry7 = new ISOCountry(81, "AM", "ARM", "Armenia", "Armenian");
        AM = iSOCountry7;
        ISOCountry iSOCountry8 = new ISOCountry(1328, "AN", "ANT", "Netherlands Antilles", "Antillean");
        AN = iSOCountry8;
        ISOCountry iSOCountry9 = new ISOCountry(36, "AO", "AGO", "Angola", "Angolan");
        AO = iSOCountry9;
        ISOCountry iSOCountry10 = new ISOCountry(16, "AQ", n0.f32118f, "Antarctica", "Antarctic");
        AQ = iSOCountry10;
        ISOCountry iSOCountry11 = new ISOCountry(50, "AR", "ARG", "Argentina", "Argentine, Argentinean, Argentinian");
        AR = iSOCountry11;
        ISOCountry iSOCountry12 = new ISOCountry(22, "AS", "ASM", "American Samoa", "American Samoan");
        AS = iSOCountry12;
        ISOCountry iSOCountry13 = new ISOCountry(64, "AT", "AUT", "Austria", "Austrian");
        AT = iSOCountry13;
        ISOCountry iSOCountry14 = new ISOCountry(54, "AU", "AUS", "Australia", "Australian");
        AU = iSOCountry14;
        ISOCountry iSOCountry15 = new ISOCountry(1331, "AW", "ABW", "Aruba", "Aruban");
        AW = iSOCountry15;
        ISOCountry iSOCountry16 = iSOCountry13;
        ISOCountry iSOCountry17 = new ISOCountry(584, "AX", "ALA", "Aland Islands");
        AX = iSOCountry17;
        ISOCountry iSOCountry18 = new ISOCountry(49, "AZ", "AZE", "Azerbaijan", "Azerbaijani, Azeri");
        AZ = iSOCountry18;
        ISOCountry iSOCountry19 = new ISOCountry(112, "BA", "BIH", "Bosnia and Herzegovina", "Bosnian, Bosniak, Herzegovinian");
        BA = iSOCountry19;
        ISOCountry iSOCountry20 = new ISOCountry(82, "BB", "BRB", "Barbados", "Barbadian");
        BB = iSOCountry20;
        ISOCountry iSOCountry21 = new ISOCountry(80, "BD", "BGD", "Bangladesh", "Bangladeshi");
        BD = iSOCountry21;
        ISOCountry iSOCountry22 = new ISOCountry(86, "BE", "BEL", "Belgium", "Belgian");
        BE = iSOCountry22;
        ISOCountry iSOCountry23 = new ISOCountry(2132, "BF", "BFA", "Burkina Faso", "Burkinabe");
        BF = iSOCountry23;
        ISOCountry iSOCountry24 = new ISOCountry(256, "BG", "BGR", "Bulgaria", "Bulgarian");
        BG = iSOCountry24;
        ISOCountry iSOCountry25 = new ISOCountry(72, "BH", "BHR", "Bahrain", "Bahraini");
        BH = iSOCountry25;
        ISOCountry iSOCountry26 = new ISOCountry(264, "BI", "BDI", "Burundi", "Burundian");
        BI = iSOCountry26;
        ISOCountry iSOCountry27 = new ISOCountry(516, "BJ", "BEN", "Benin", "Beninese");
        BJ = iSOCountry27;
        ISOCountry iSOCountry28 = new ISOCountry(1618, "BL", "BLM", "Saint Barthlemy");
        BL = iSOCountry28;
        ISOCountry iSOCountry29 = new ISOCountry(96, "BM", "BMU", "Bermuda", "Bermudian, Bermudan");
        BM = iSOCountry29;
        ISOCountry iSOCountry30 = new ISOCountry(150, "BN", "BRN", "Brunei Darussalam", "Bruneian");
        BN = iSOCountry30;
        ISOCountry iSOCountry31 = new ISOCountry(104, "BO", "BOL", "Bolivia", "Bolivian");
        BO = iSOCountry31;
        ISOCountry iSOCountry32 = new ISOCountry(118, "BR", "BRA", "Brazil", "Brazilian");
        BR = iSOCountry32;
        ISOCountry iSOCountry33 = new ISOCountry(68, "BS", "BHS", "Bahamas", "Bahamian");
        BS = iSOCountry33;
        ISOCountry iSOCountry34 = new ISOCountry(100, "BT", "BTN", "Bhutan", "Bhutanese");
        BT = iSOCountry34;
        ISOCountry iSOCountry35 = iSOCountry30;
        ISOCountry iSOCountry36 = iSOCountry32;
        ISOCountry iSOCountry37 = new ISOCountry(116, "BV", "BVT", "Bouvet Island");
        BV = iSOCountry37;
        ISOCountry iSOCountry38 = new ISOCountry(114, "BW", "BWA", "Botswana", "Botswanan");
        BW = iSOCountry38;
        ISOCountry iSOCountry39 = new ISOCountry(TUIMessageBean.MSG_STATUS_DELETE, "BY", "BLR", "Belarus", "Belarusian");
        BY = iSOCountry39;
        ISOCountry iSOCountry40 = new ISOCountry(132, "BZ", "BLZ", "Belize", "Belizean");
        BZ = iSOCountry40;
        ISOCountry iSOCountry41 = new ISOCountry(292, "CA", "CAN", "Canada", "Canadian");
        CA = iSOCountry41;
        ISOCountry iSOCountry42 = iSOCountry41;
        ISOCountry iSOCountry43 = iSOCountry39;
        ISOCountry iSOCountry44 = new ISOCountry(358, "CC", "CCK", "Cocos (Keeling) Islands");
        CC = iSOCountry44;
        ISOCountry iSOCountry45 = new ISOCountry(b.f34945b, "CD", "COD", "Congo the Democratic Republic of the", "Congolese");
        CD = iSOCountry45;
        ISOCountry iSOCountry46 = new ISOCountry(320, "CF", "CAF", "Central African Republic", "Central African");
        CF = iSOCountry46;
        ISOCountry iSOCountry47 = new ISOCountry(376, "CG", "COG", "Congo", "Congolese");
        CG = iSOCountry47;
        ISOCountry iSOCountry48 = new ISOCountry(1878, "CH", "CHE", "Switzerland", "Swiss");
        CH = iSOCountry48;
        ISOCountry iSOCountry49 = new ISOCountry(900, "CI", "CIV", "Cote d'Ivoire", "Ivorian");
        CI = iSOCountry49;
        ISOCountry iSOCountry50 = iSOCountry48;
        ISOCountry iSOCountry51 = iSOCountry46;
        ISOCountry iSOCountry52 = new ISOCountry(388, "CK", "COK", "Cook Islands");
        CK = iSOCountry52;
        ISOCountry iSOCountry53 = new ISOCountry(338, "CL", "CHL", "Chile", "Chilean");
        CL = iSOCountry53;
        ISOCountry iSOCountry54 = new ISOCountry(288, "CM", "CMR", "Cameroon", "Cameroonian");
        CM = iSOCountry54;
        ISOCountry iSOCountry55 = new ISOCountry(342, "CN", "CHN", "China", "Chinese");
        CN = iSOCountry55;
        ISOCountry iSOCountry56 = new ISOCountry(368, "CO", "COL", "Colombia", "Colombian");
        CO = iSOCountry56;
        ISOCountry iSOCountry57 = new ISOCountry(392, "CR", "CRI", "Costa Rica", "Costa Rican");
        CR = iSOCountry57;
        ISOCountry iSOCountry58 = new ISOCountry(402, "CU", "CUB", "Cuba", "Cuban");
        CU = iSOCountry58;
        ISOCountry iSOCountry59 = new ISOCountry(MobileEvents.EVENTTYPE_SDKPARAMETERS, "CV", "CPV", "Cape Verde", "Cape Verdean");
        CV = iSOCountry59;
        ISOCountry iSOCountry60 = iSOCountry52;
        ISOCountry iSOCountry61 = iSOCountry54;
        ISOCountry iSOCountry62 = new ISOCountry(354, "CX", "CXR", "Christmas Island");
        CX = iSOCountry62;
        ISOCountry iSOCountry63 = new ISOCountry(TPNativePlayerInitConfig.BOOL_ENABLE_DROPFRAME_BY_REFRESHRATE, "CY", "CYP", "Cyprus", "Cypriot");
        CY = iSOCountry63;
        ISOCountry iSOCountry64 = new ISOCountry(515, "CZ", "CZE", "Czech Republic", "Czech");
        CZ = iSOCountry64;
        ISOCountry iSOCountry65 = new ISOCountry(630, "DE", "DEU", "Germany", "German");
        DE = iSOCountry65;
        ISOCountry iSOCountry66 = new ISOCountry(610, "DJ", "DJI", "Djibouti", "Djiboutian");
        DJ = iSOCountry66;
        ISOCountry iSOCountry67 = new ISOCountry(520, "DK", "DNK", "Denmark", "Danish");
        DK = iSOCountry67;
        ISOCountry iSOCountry68 = new ISOCountry(530, "DM", "DMA", "Dominica", "Dominican");
        DM = iSOCountry68;
        ISOCountry iSOCountry69 = new ISOCountry(532, "DO", "DOM", "Dominican Republic", "Dominican");
        DO = iSOCountry69;
        ISOCountry iSOCountry70 = new ISOCountry(18, "DZ", "DZA", "Algeria", "Algerian");
        DZ = iSOCountry70;
        ISOCountry iSOCountry71 = new ISOCountry(536, "EC", "ECU", "Ecuador", "Ecuadorian");
        EC = iSOCountry71;
        ISOCountry iSOCountry72 = new ISOCountry(563, "EE", "EST", "Estonia", "Estonian");
        EE = iSOCountry72;
        ISOCountry iSOCountry73 = new ISOCountry(2072, "EG", "EGY", "Egypt", "Egyptian");
        EG = iSOCountry73;
        ISOCountry iSOCountry74 = new ISOCountry(1842, "EH", "ESH", "Western Sahara", "Sahraw, Sahrawian, Sahraouian");
        EH = iSOCountry74;
        ISOCountry iSOCountry75 = new ISOCountry(562, "ER", "ERI", "Eritrea", "Eritrean");
        ER = iSOCountry75;
        ISOCountry iSOCountry76 = new ISOCountry(1828, "ES", "ESP", "Spain", "Spanish");
        ES = iSOCountry76;
        ISOCountry iSOCountry77 = new ISOCountry(561, "ET", DefiChainInfo.CHAIN_ETH, "Ethiopia", "Ethiopian");
        ET = iSOCountry77;
        ISOCountry iSOCountry78 = new ISOCountry(582, "FI", "FIN", "Finland", "Finnish");
        FI = iSOCountry78;
        ISOCountry iSOCountry79 = new ISOCountry(TPCodecParamers.TP_PROFILE_H264_CONSTRAINED_BASELINE, "FJ", "FJI", "Fiji", "Fijian");
        FJ = iSOCountry79;
        ISOCountry iSOCountry80 = new ISOCountry(568, "FK", "FLK", "Falkland Islands (Malvinas)");
        FK = iSOCountry80;
        ISOCountry iSOCountry81 = new ISOCountry(1411, "FM", "FSM", "Micronesia Federated States of", "Micronesian");
        FM = iSOCountry81;
        ISOCountry iSOCountry82 = new ISOCountry(564, "FO", "FRO", "Faroe Islands", "Faroese");
        FO = iSOCountry82;
        ISOCountry iSOCountry83 = new ISOCountry(592, "FR", "FRA", "France", "French");
        FR = iSOCountry83;
        ISOCountry iSOCountry84 = new ISOCountry(614, "GA", "GAB", "Gabon", "Gabonese");
        GA = iSOCountry84;
        ISOCountry iSOCountry85 = new ISOCountry(2086, "GB", "GBR", "United Kingdom", "British");
        GB = iSOCountry85;
        ISOCountry iSOCountry86 = new ISOCountry(776, "GD", "GRD", "Grenada", "Grenadian");
        GD = iSOCountry86;
        ISOCountry iSOCountry87 = new ISOCountry(616, "GE", "GEO", "Georgia", "Georgian");
        GE = iSOCountry87;
        ISOCountry iSOCountry88 = new ISOCountry(596, "GF", "GUF", "French Guiana", "French Guianese");
        GF = iSOCountry88;
        ISOCountry iSOCountry89 = iSOCountry82;
        ISOCountry iSOCountry90 = iSOCountry80;
        ISOCountry iSOCountry91 = new ISOCountry(2097, "GG", "GGY", "Guernsey");
        GG = iSOCountry91;
        ISOCountry iSOCountry92 = new ISOCountry(648, "GH", "GHA", "Ghana", "Ghanaian");
        GH = iSOCountry92;
        ISOCountry iSOCountry93 = iSOCountry92;
        ISOCountry iSOCountry94 = new ISOCountry(658, "GI", "GIB", "Gibraltar");
        GI = iSOCountry94;
        ISOCountry iSOCountry95 = new ISOCountry(772, "GL", "GRL", "Greenland", "Greenlandic");
        GL = iSOCountry95;
        ISOCountry iSOCountry96 = new ISOCountry(624, "GM", "GMB", "Gambia", "Gambian");
        GM = iSOCountry96;
        ISOCountry iSOCountry97 = new ISOCountry(804, "GN", "GIN", "Guinea", "Guinean");
        GN = iSOCountry97;
        ISOCountry iSOCountry98 = iSOCountry94;
        ISOCountry iSOCountry99 = new ISOCountry(786, "GP", "GLP", "Guadeloupe");
        GP = iSOCountry99;
        ISOCountry iSOCountry100 = new ISOCountry(550, "GQ", "GNQ", "Equatorial Guinea", "Equatorial Guinean, Equatoguinean");
        GQ = iSOCountry100;
        ISOCountry iSOCountry101 = new ISOCountry(768, "GR", "GRC", "Greece", "Greek, Hellenic");
        GR = iSOCountry101;
        ISOCountry iSOCountry102 = iSOCountry101;
        ISOCountry iSOCountry103 = iSOCountry99;
        ISOCountry iSOCountry104 = new ISOCountry(569, "GS", "SGS", "South Georgia and the South Sandwich Islands");
        GS = iSOCountry104;
        ISOCountry iSOCountry105 = new ISOCountry(TXLivePushConfig.DEFAULT_MIN_VIDEO_BITRATE, "GT", "GTM", "Guatemala", "Guatemalan");
        GT = iSOCountry105;
        ISOCountry iSOCountry106 = new ISOCountry(790, "GU", "GUM", "Guam", "Guamanian");
        GU = iSOCountry106;
        ISOCountry iSOCountry107 = new ISOCountry(1572, "GW", "GNB", "Guinea-Bissau", "Guinean");
        GW = iSOCountry107;
        ISOCountry iSOCountry108 = new ISOCountry(808, "GY", "GUY", "Guyana", "Guyanese");
        GY = iSOCountry108;
        ISOCountry iSOCountry109 = new ISOCountry(836, "HK", "HKG", "Hong Kong", "Hong Kong, Hongkongese");
        HK = iSOCountry109;
        ISOCountry iSOCountry110 = iSOCountry104;
        ISOCountry iSOCountry111 = iSOCountry108;
        ISOCountry iSOCountry112 = iSOCountry106;
        ISOCountry iSOCountry113 = new ISOCountry(820, "HM", "HMD", "Heard Island and McDonald Islands");
        HM = iSOCountry113;
        ISOCountry iSOCountry114 = new ISOCountry(832, "HN", "HND", "Honduras", "Honduran");
        HN = iSOCountry114;
        ISOCountry iSOCountry115 = new ISOCountry(401, "HR", "HRV", "Croatia", "Croatian");
        HR = iSOCountry115;
        ISOCountry iSOCountry116 = new ISOCountry(818, "HT", "HTI", "Haiti", "Haitian");
        HT = iSOCountry116;
        ISOCountry iSOCountry117 = new ISOCountry(840, "HU", "HUN", "Hungary", "Hungarian");
        HU = iSOCountry117;
        ISOCountry iSOCountry118 = new ISOCountry(864, "ID", "IDN", "Indonesia", "Indonesian");
        ID = iSOCountry118;
        ISOCountry iSOCountry119 = new ISOCountry(882, "IE", "IRL", "Ireland", "Irish");
        IE = iSOCountry119;
        ISOCountry iSOCountry120 = new ISOCountry(886, "IL", "ISR", "Israel", "Israeli");
        IL = iSOCountry120;
        ISOCountry iSOCountry121 = new ISOCountry(2099, "IM", "IMN", "Isle of Man", "Manx");
        IM = iSOCountry121;
        ISOCountry iSOCountry122 = new ISOCountry(854, "IN", "IND", "India", "Indian");
        IN = iSOCountry122;
        ISOCountry iSOCountry123 = iSOCountry113;
        ISOCountry iSOCountry124 = new ISOCountry(134, "IO", "IOT", "British Indian Ocean Territory");
        IO = iSOCountry124;
        ISOCountry iSOCountry125 = new ISOCountry(872, "IQ", "IRQ", "Iraq", "Iraqi");
        IQ = iSOCountry125;
        ISOCountry iSOCountry126 = new ISOCountry(868, "IR", "IRN", "Iran Islamic Republic of", "Iranian, Persian");
        IR = iSOCountry126;
        ISOCountry iSOCountry127 = new ISOCountry(850, "IS", "ISL", "Iceland", "Icelandic");
        IS = iSOCountry127;
        ISOCountry iSOCountry128 = new ISOCountry(896, "IT", "ITA", "Italy", "Italian");
        IT = iSOCountry128;
        ISOCountry iSOCountry129 = iSOCountry128;
        ISOCountry iSOCountry130 = iSOCountry126;
        ISOCountry iSOCountry131 = new ISOCountry(2098, "JE", "JEY", "Jersey");
        JE = iSOCountry131;
        ISOCountry iSOCountry132 = new ISOCountry(904, "JM", "JAM", "Jamaica", "Jamaican");
        JM = iSOCountry132;
        ISOCountry iSOCountry133 = new ISOCountry(1024, "JO", "JOR", "Jordan", "Jordanian");
        JO = iSOCountry133;
        ISOCountry iSOCountry134 = new ISOCountry(914, "JP", "JPN", "Japan", "Japanese");
        JP = iSOCountry134;
        ISOCountry iSOCountry135 = new ISOCountry(1028, "KE", "KEN", "Kenya", "Kenyan");
        KE = iSOCountry135;
        ISOCountry iSOCountry136 = new ISOCountry(UGCDataReportDef.DR_DAU_EVENT_ID_RECORD_RESOLUTION_1080P, ExpandedProductParsedResult.KILOGRAM, "KGZ", "Kyrgyzstan", "Kyrgyz");
        KG = iSOCountry136;
        ISOCountry iSOCountry137 = new ISOCountry(278, "KH", "KHM", "Cambodia", "Cambodian");
        KH = iSOCountry137;
        ISOCountry iSOCountry138 = new ISOCountry(662, "KI", "KIR", "Kiribati", "I-Kiribati");
        KI = iSOCountry138;
        ISOCountry iSOCountry139 = new ISOCountry(372, "KM", "COM", "Comoros", "Comorian");
        KM = iSOCountry139;
        ISOCountry iSOCountry140 = iSOCountry135;
        ISOCountry iSOCountry141 = iSOCountry133;
        ISOCountry iSOCountry142 = new ISOCountry(1625, "KN", "KNA", "Saint Kitts and Nevis");
        KN = iSOCountry142;
        ISOCountry iSOCountry143 = new ISOCountry(1032, "KP", "PRK", "Korea Democratic People's Republic of", "North Korean");
        KP = iSOCountry143;
        ISOCountry iSOCountry144 = new ISOCountry(1040, "KR", "KOR", "Korea Republic of", "South Korean");
        KR = iSOCountry144;
        ISOCountry iSOCountry145 = new ISOCountry(UGCDataReportDef.DR_DAU_EVENT_ID_RECORD_RESOLUTION_BD, "KW", "KWT", "Kuwait", "Kuwaiti");
        KW = iSOCountry145;
        ISOCountry iSOCountry146 = new ISOCountry(310, "KY", "CYM", "Cayman Islands", "Caymanian");
        KY = iSOCountry146;
        ISOCountry iSOCountry147 = new ISOCountry(920, "KZ", "KAZ", "Kazakhstan", "Kazakh");
        KZ = iSOCountry147;
        ISOCountry iSOCountry148 = new ISOCountry(UGCDataReportDef.DR_DAU_EVENT_ID_RECORD_VIDEO_BITRATE, "LA", "LAO", "Lao People's Democratic Republic", "Lao");
        LA = iSOCountry148;
        ISOCountry iSOCountry149 = new ISOCountry(UGCDataReportDef.DR_DAU_EVENT_ID_RECORD_BEAUTY_WHITE, ExpandedProductParsedResult.POUND, "LBN", "Lebanon", "Lebanese");
        LB = iSOCountry149;
        ISOCountry iSOCountry150 = new ISOCountry(1634, "LC", "LCA", "Saint Lucia", "Saint Lucian");
        LC = iSOCountry150;
        ISOCountry iSOCountry151 = iSOCountry144;
        ISOCountry iSOCountry152 = new ISOCountry(1080, "LI", "LIE", "Liechtenstein");
        LI = iSOCountry152;
        ISOCountry iSOCountry153 = new ISOCountry(MTCorePrivatesApi.SDK_VERSION_CODE, "LK", "LKA", "Sri Lanka", "Sri Lankan");
        LK = iSOCountry153;
        ISOCountry iSOCountry154 = new ISOCountry(1072, "LR", "LBR", "Liberia", "Liberian");
        LR = iSOCountry154;
        ISOCountry iSOCountry155 = new ISOCountry(1062, "LS", "LSO", "Lesotho", "Basotho");
        LS = iSOCountry155;
        ISOCountry iSOCountry156 = new ISOCountry(SPHINCS256Config.CRYPTO_SECRETKEYBYTES, "LT", "LTU", "Lithuania", "Lithuanian");
        LT = iSOCountry156;
        ISOCountry iSOCountry157 = new ISOCountry(1090, "LU", "LUX", "Luxembourg", "Luxembourg, Luxembourgish");
        LU = iSOCountry157;
        ISOCountry iSOCountry158 = new ISOCountry(1064, "LV", "LVA", "Latvia", "Latvian");
        LV = iSOCountry158;
        ISOCountry iSOCountry159 = new ISOCountry(1076, "LY", "LBY", "Libyan Arab Jamahiriya", "Libyan");
        LY = iSOCountry159;
        ISOCountry iSOCountry160 = new ISOCountry(1284, "MA", "MAR", "Morocco", "Moroccan");
        MA = iSOCountry160;
        ISOCountry iSOCountry161 = new ISOCountry(1170, "MC", "MCO", "Monaco", "Monegasque, Monacan");
        MC = iSOCountry161;
        ISOCountry iSOCountry162 = new ISOCountry(1176, "MD", "MDA", "Moldova", "Moldovan");
        MD = iSOCountry162;
        ISOCountry iSOCountry163 = new ISOCountry(1177, "ME", "MNE", "Montenegro", "Montenegrin");
        ME = iSOCountry163;
        ISOCountry iSOCountry164 = iSOCountry152;
        ISOCountry iSOCountry165 = new ISOCountry(1635, "MF", "MAF", "Saint Martin (French part)");
        MF = iSOCountry165;
        ISOCountry iSOCountry166 = new ISOCountry(1104, "MG", "MDG", "Madagascar", "Malagasy");
        MG = iSOCountry166;
        ISOCountry iSOCountry167 = new ISOCountry(1412, "MH", "MHL", "Marshall Islands", "Marshallese");
        MH = iSOCountry167;
        ISOCountry iSOCountry168 = new ISOCountry(2055, "MK", "MKD", "Macedonia the former Yugoslav Republic of", "Macedonian");
        MK = iSOCountry168;
        ISOCountry iSOCountry169 = new ISOCountry(1126, "ML", "MLI", "Mali", "Malian");
        ML = iSOCountry169;
        ISOCountry iSOCountry170 = new ISOCountry(TipsMessageBean.MSG_TYPE_GROUP_QUITE, "MM", "MMR", "Myanmar", "Burmese");
        MM = iSOCountry170;
        ISOCountry iSOCountry171 = new ISOCountry(1174, "MN", "MNG", "Mongolia", "Mongolian");
        MN = iSOCountry171;
        ISOCountry iSOCountry172 = new ISOCountry(1094, "MO", "MAC", "Macao", "Macanese, Chinese");
        MO = iSOCountry172;
        ISOCountry iSOCountry173 = new ISOCountry(1408, "MP", "MNP", "Northern Mariana Islands", "Northern Marianan");
        MP = iSOCountry173;
        ISOCountry iSOCountry174 = new ISOCountry(1140, "MQ", "MTQ", "Martinique", "Martiniquais, Martinican");
        MQ = iSOCountry174;
        ISOCountry iSOCountry175 = new ISOCountry(1144, "MR", "MRT", "Mauritania", "Mauritanian");
        MR = iSOCountry175;
        ISOCountry iSOCountry176 = new ISOCountry(1280, "MS", "MSR", "Montserrat", "Montserratian");
        MS = iSOCountry176;
        ISOCountry iSOCountry177 = new ISOCountry(1136, "MT", "MLT", "Malta", "Maltese");
        MT = iSOCountry177;
        ISOCountry iSOCountry178 = new ISOCountry(1152, "MU", "MUS", "Mauritius", "Mauritian");
        MU = iSOCountry178;
        ISOCountry iSOCountry179 = new ISOCountry(1122, "MV", "MDV", "Maldives", "Maldivian");
        MV = iSOCountry179;
        ISOCountry iSOCountry180 = new ISOCountry(TXLiteAVCode.WARNING_INSUFFICIENT_CAPTURE_FPS, "MW", "MWI", "Malawi", "Malawian");
        MW = iSOCountry180;
        ISOCountry iSOCountry181 = new ISOCountry(1156, "MX", "MEX", "Mexico", "Mexican");
        MX = iSOCountry181;
        ISOCountry iSOCountry182 = new ISOCountry(TXLiteAVCode.WARNING_CAMERA_NOT_AUTHORIZED, "MY", "MYS", "Malaysia", "Malaysian");
        MY = iSOCountry182;
        ISOCountry iSOCountry183 = new ISOCountry(1288, "MZ", "MOZ", "Mozambique", "Mozambican");
        MZ = iSOCountry183;
        ISOCountry iSOCountry184 = new ISOCountry(1302, "NA", "NAM", "Namibia", "Namibian");
        NA = iSOCountry184;
        ISOCountry iSOCountry185 = new ISOCountry(1344, "NC", "NCL", "New Caledonia", "New Caledonian");
        NC = iSOCountry185;
        ISOCountry iSOCountry186 = new ISOCountry(1378, "NE", "NER", "Niger", "Nigerien");
        NE = iSOCountry186;
        ISOCountry iSOCountry187 = new ISOCountry(1396, "NF", "NFK", "Norfolk Island");
        NF = iSOCountry187;
        ISOCountry iSOCountry188 = new ISOCountry(1382, "NG", "NGA", "Nigeria", "Nigerian");
        NG = iSOCountry188;
        ISOCountry iSOCountry189 = new ISOCountry(1368, "NI", "NIC", "Nicaragua", "Nicaraguan");
        NI = iSOCountry189;
        ISOCountry iSOCountry190 = new ISOCountry(1320, "NL", "NLD", "Netherlands", "Dutch");
        NL = iSOCountry190;
        ISOCountry iSOCountry191 = new ISOCountry(1400, "NO", "NOR", "Norway", "Norwegian");
        NO = iSOCountry191;
        ISOCountry iSOCountry192 = new ISOCountry(1316, "NP", "NPL", "Nepal", "Nepali");
        NP = iSOCountry192;
        ISOCountry iSOCountry193 = new ISOCountry(1312, "NR", "NRU", "Nauru", "Nauruan");
        NR = iSOCountry193;
        ISOCountry iSOCountry194 = new ISOCountry(1392, "NU", "NIU", "Niue", "Niuean");
        NU = iSOCountry194;
        ISOCountry iSOCountry195 = iSOCountry191;
        ISOCountry iSOCountry196 = iSOCountry189;
        ISOCountry iSOCountry197 = new ISOCountry(1364, "NZ", "NZL", "New Zealand");
        NZ = iSOCountry197;
        ISOCountry iSOCountry198 = new ISOCountry(1298, "OM", "OMN", "Oman", "Omani");
        OM = iSOCountry198;
        ISOCountry iSOCountry199 = new ISOCountry(1425, "PA", "PAN", "Panama", "Panamanian");
        PA = iSOCountry199;
        ISOCountry iSOCountry200 = new ISOCountry(1540, "PE", "PER", "Peru", "Peruvian");
        PE = iSOCountry200;
        ISOCountry iSOCountry201 = new ISOCountry(BannerConfig.SCROLL_TIME, "PF", "PYF", "French Polynesia", "French Polynesian");
        PF = iSOCountry201;
        ISOCountry iSOCountry202 = new ISOCountry(1432, "PG", "PNG", "Papua New Guinea", "Papua New Guinean, Papuan");
        PG = iSOCountry202;
        ISOCountry iSOCountry203 = new ISOCountry(1544, "PH", "PHL", "Philippines", "Philippine, Filipino");
        PH = iSOCountry203;
        ISOCountry iSOCountry204 = new ISOCountry(1414, "PK", "PAK", "Pakistan", "Pakistani");
        PK = iSOCountry204;
        ISOCountry iSOCountry205 = new ISOCountry(1558, "PL", "POL", "Poland", "Polish");
        PL = iSOCountry205;
        ISOCountry iSOCountry206 = new ISOCountry(1638, "PM", "SPM", "Saint Pierre and Miquelon", "Saint Pierrais, Miquelonnais");
        PM = iSOCountry206;
        ISOCountry iSOCountry207 = iSOCountry197;
        ISOCountry iSOCountry208 = new ISOCountry(1554, "PN", "PCN", "Pitcairn");
        PN = iSOCountry208;
        ISOCountry iSOCountry209 = new ISOCountry(1584, "PR", "PRI", "Puerto Rico", "Puerto Rican");
        PR = iSOCountry209;
        ISOCountry iSOCountry210 = new ISOCountry(629, "PS", "PSE", "Palestinian Territory Occupied", "Palestinian");
        PS = iSOCountry210;
        ISOCountry iSOCountry211 = new ISOCountry(1568, "PT", "PRT", "Portugal", "Portuguese");
        PT = iSOCountry211;
        ISOCountry iSOCountry212 = new ISOCountry(1413, "PW", "PLW", "Palau", "Palauan");
        PW = iSOCountry212;
        ISOCountry iSOCountry213 = new ISOCountry(1536, "PY", "PRY", "Paraguay", "Paraguayan");
        PY = iSOCountry213;
        ISOCountry iSOCountry214 = new ISOCountry(1588, "QA", "QAT", "Qatar", "Qatari");
        QA = iSOCountry214;
        ISOCountry iSOCountry215 = new ISOCountry(1592, "RE", "REU", "Reunion", "Reunionese, Reunionnais");
        RE = iSOCountry215;
        ISOCountry iSOCountry216 = new ISOCountry(1602, "RO", "ROU", "Romania", "Romanian");
        RO = iSOCountry216;
        ISOCountry iSOCountry217 = new ISOCountry(1672, "RS", "SRB", "Serbia", "Serbian");
        RS = iSOCountry217;
        ISOCountry iSOCountry218 = new ISOCountry(1603, "RU", "RUS", "Russian Federation", "Russian");
        RU = iSOCountry218;
        ISOCountry iSOCountry219 = new ISOCountry(1606, "RW", "RWA", "Rwanda", "Rwandan");
        RW = iSOCountry219;
        ISOCountry iSOCountry220 = new ISOCountry(1666, "SA", "SAU", "Saudi Arabia", "Saudi, Saudi Arabian");
        SA = iSOCountry220;
        ISOCountry iSOCountry221 = new ISOCountry(144, "SB", "SLB", "Solomon Islands", "Solomon Island");
        SB = iSOCountry221;
        ISOCountry iSOCountry222 = new ISOCountry(1680, "SC", "SYC", "Seychelles", "Seychellois");
        SC = iSOCountry222;
        ISOCountry iSOCountry223 = new ISOCountry(1846, "SD", "SDN", "Sudan", "Sudanese");
        SD = iSOCountry223;
        ISOCountry iSOCountry224 = new ISOCountry(1874, "SE", "SWE", "Sweden", "Swedish");
        SE = iSOCountry224;
        ISOCountry iSOCountry225 = iSOCountry208;
        ISOCountry iSOCountry226 = new ISOCountry(1794, "SG", "SGP", "Singapore");
        SG = iSOCountry226;
        ISOCountry iSOCountry227 = new ISOCountry(1620, "SH", "SHN", "Saint Helena", "Saint Helenian");
        SH = iSOCountry227;
        ISOCountry iSOCountry228 = new ISOCountry(1797, "SI", "SVN", "Slovenia", "Slovenian, Slovene");
        SI = iSOCountry228;
        ISOCountry iSOCountry229 = new ISOCountry(1860, "SJ", "SJM", "Svalbard and Jan Mayen");
        SJ = iSOCountry229;
        ISOCountry iSOCountry230 = new ISOCountry(1795, "SK", "SVK", "Slovakia", "Slovak");
        SK = iSOCountry230;
        ISOCountry iSOCountry231 = new ISOCountry(1684, "SL", "SLE", "Sierra Leone", "Sierra Leonean");
        SL = iSOCountry231;
        ISOCountry iSOCountry232 = new ISOCountry(1652, "SM", "SMR", "San Marino", "Sammarinese");
        SM = iSOCountry232;
        ISOCountry iSOCountry233 = new ISOCountry(1670, "SN", "SEN", "Senegal", "Senegalese");
        SN = iSOCountry233;
        ISOCountry iSOCountry234 = new ISOCountry(1798, "SO", "SOM", "Somalia", "Somali, Somalian");
        SO = iSOCountry234;
        ISOCountry iSOCountry235 = new ISOCountry(1856, "SR", "SUR", "Suriname", "Surinamese");
        SR = iSOCountry235;
        ISOCountry iSOCountry236 = new ISOCountry(1656, "ST", "STP", "Sao Tome and Principe", "Sao Tomean");
        ST = iSOCountry236;
        ISOCountry iSOCountry237 = new ISOCountry(546, "SV", "SLV", "El Salvador", "Salvadoran");
        SV = iSOCountry237;
        ISOCountry iSOCountry238 = new ISOCountry(1888, "SY", "SYR", "Syrian Arab Republic", "Syrian");
        SY = iSOCountry238;
        ISOCountry iSOCountry239 = new ISOCountry(1864, "SZ", "SWZ", "Swaziland", "Swazi");
        SZ = iSOCountry239;
        ISOCountry iSOCountry240 = iSOCountry229;
        ISOCountry iSOCountry241 = iSOCountry233;
        ISOCountry iSOCountry242 = new ISOCountry(1942, "TC", "TCA", "Turks and Caicos Islands");
        TC = iSOCountry242;
        ISOCountry iSOCountry243 = new ISOCountry(328, "TD", "TCD", "Chad", "Chadian");
        TD = iSOCountry243;
        ISOCountry iSOCountry244 = new ISOCountry(608, "TF", "ATF", "French Southern Territories");
        TF = iSOCountry244;
        ISOCountry iSOCountry245 = new ISOCountry(1896, "TG", "TGO", "Togo", "Togolese");
        TG = iSOCountry245;
        ISOCountry iSOCountry246 = new ISOCountry(1892, "TH", "THA", "Thailand", "Thai");
        TH = iSOCountry246;
        ISOCountry iSOCountry247 = new ISOCountry(1890, "TJ", "TJK", "Tajikistan", "Tajikistani");
        TJ = iSOCountry247;
        ISOCountry iSOCountry248 = iSOCountry246;
        ISOCountry iSOCountry249 = iSOCountry244;
        ISOCountry iSOCountry250 = new ISOCountry(1906, "TK", "TKL", "Tokelau");
        TK = iSOCountry250;
        ISOCountry iSOCountry251 = new ISOCountry(1574, "TL", SSLSocketFactoryFactory.DEFAULT_PROTOCOL, "Timor-Leste", "Timorese");
        TL = iSOCountry251;
        ISOCountry iSOCountry252 = new ISOCountry(1941, "TM", "TKM", "Turkmenistan", "Turkmen");
        TM = iSOCountry252;
        ISOCountry iSOCountry253 = new ISOCountry(1928, "TN", "TUN", "Tunisia", "Tunisian");
        TN = iSOCountry253;
        ISOCountry iSOCountry254 = new ISOCountry(1910, "TO", "TON", "Tonga", "Tongan");
        TO = iSOCountry254;
        ISOCountry iSOCountry255 = new ISOCountry(1938, "TR", "TUR", "Turkey", "Turkish");
        TR = iSOCountry255;
        ISOCountry iSOCountry256 = new ISOCountry(1920, "TT", "TTO", "Trinidad and Tobago", "Trinidadian, Tobagonian");
        TT = iSOCountry256;
        ISOCountry iSOCountry257 = new ISOCountry(1944, "TV", "TUV", "Tuvalu", "Tuvaluan");
        TV = iSOCountry257;
        ISOCountry iSOCountry258 = new ISOCountry(344, "TW", "TWN", "Taiwan Province of China", "Taiwanese");
        TW = iSOCountry258;
        ISOCountry iSOCountry259 = new ISOCountry(2100, "TZ", "TZA", "Tanzania United Republic of", "Tanzanian");
        TZ = iSOCountry259;
        ISOCountry iSOCountry260 = new ISOCountry(2052, "UA", "UKR", "Ukraine", "Ukrainian");
        UA = iSOCountry260;
        ISOCountry iSOCountry261 = new ISOCountry(2048, "UG", "UGA", "Uganda", "Ugandan");
        UG = iSOCountry261;
        ISOCountry iSOCountry262 = iSOCountry250;
        ISOCountry iSOCountry263 = new ISOCountry(1409, "UM", "UMI", "United States Minor Outlying Islands");
        UM = iSOCountry263;
        ISOCountry iSOCountry264 = new ISOCountry(2112, "US", "USA", "United States", "American");
        US = iSOCountry264;
        ISOCountry iSOCountry265 = new ISOCountry(2136, "UY", "URY", "Uruguay", "Uruguayan");
        UY = iSOCountry265;
        ISOCountry iSOCountry266 = new ISOCountry(Wots.WOTS_SIGBYTES, "UZ", "UZB", "Uzbekistan", "Uzbekistani, Uzbek");
        UZ = iSOCountry266;
        ISOCountry iSOCountry267 = new ISOCountry(822, "VA", "VAT", "Holy See (Vatican City State)");
        VA = iSOCountry267;
        ISOCountry iSOCountry268 = new ISOCountry(1648, "VC", "VCT", "Saint Vincent and the Grenadines", "Saint Vincentian");
        VC = iSOCountry268;
        ISOCountry iSOCountry269 = new ISOCountry(2146, "VE", "VEN", "Venezuela", "Venezuelan");
        VE = iSOCountry269;
        ISOCountry iSOCountry270 = new ISOCountry(TPOptionalID.OPTION_ID_BEFORE_BOOL_ENABLE_IGNORE_VIDEO_STREAM_IN_COMMON_AUDIO_FORMATS, "VG", "VGB", "Virgin Islands British", "Virgin Island");
        VG = iSOCountry270;
        ISOCountry iSOCountry271 = new ISOCountry(2128, "VI", "VIR", "Virgin Islands U.S.", "Virgin Island");
        VI = iSOCountry271;
        ISOCountry iSOCountry272 = new ISOCountry(1796, "VN", "VNM", "Viet Nam", "Vietnamese");
        VN = iSOCountry272;
        ISOCountry iSOCountry273 = new ISOCountry(1352, "VU", "VUT", "Vanuatu", "Ni-Vanuatu, Vanuatuan");
        VU = iSOCountry273;
        ISOCountry iSOCountry274 = new ISOCountry(2166, "WF", "WLF", "Wallis and Futuna", "Wallisian, Futunan");
        WF = iSOCountry274;
        ISOCountry iSOCountry275 = new ISOCountry(2178, "WS", "WSM", "Samoa", "Samoan");
        WS = iSOCountry275;
        ISOCountry iSOCountry276 = new ISOCountry(2183, "YE", "YEM", "Yemen", "Yemeni");
        YE = iSOCountry276;
        ISOCountry iSOCountry277 = new ISOCountry(373, "YT", "MYT", "Mayotte", "Mahoran");
        YT = iSOCountry277;
        ISOCountry iSOCountry278 = new ISOCountry(1808, "ZA", "ZAF", "South Africa", "South African");
        ZA = iSOCountry278;
        ISOCountry iSOCountry279 = new ISOCountry(2196, "ZM", "ZMB", "Zambia", "Zambian");
        ZM = iSOCountry279;
        ISOCountry iSOCountry280 = new ISOCountry(1814, "ZW", "ZWE", "Zimbabwe", "Zimbabwean");
        ZW = iSOCountry280;
        VALUES = new Country[]{iSOCountry15, iSOCountry3, iSOCountry9, iSOCountry5, iSOCountry17, iSOCountry6, iSOCountry, iSOCountry8, iSOCountry2, iSOCountry11, iSOCountry7, iSOCountry12, iSOCountry10, iSOCountry249, iSOCountry4, iSOCountry14, iSOCountry16, iSOCountry18, iSOCountry26, iSOCountry22, iSOCountry27, iSOCountry23, iSOCountry21, iSOCountry24, iSOCountry25, iSOCountry33, iSOCountry19, iSOCountry28, iSOCountry43, iSOCountry40, iSOCountry29, iSOCountry31, iSOCountry36, iSOCountry20, iSOCountry35, iSOCountry34, iSOCountry37, iSOCountry38, iSOCountry51, iSOCountry42, iSOCountry44, iSOCountry50, iSOCountry53, iSOCountry55, iSOCountry49, iSOCountry61, iSOCountry45, iSOCountry47, iSOCountry60, iSOCountry56, iSOCountry139, iSOCountry59, iSOCountry57, iSOCountry58, iSOCountry62, iSOCountry146, iSOCountry63, iSOCountry64, iSOCountry65, iSOCountry66, iSOCountry68, iSOCountry67, iSOCountry69, iSOCountry70, iSOCountry71, iSOCountry73, iSOCountry75, iSOCountry74, iSOCountry76, iSOCountry72, iSOCountry77, iSOCountry78, iSOCountry79, iSOCountry90, iSOCountry83, iSOCountry89, iSOCountry81, iSOCountry84, iSOCountry85, iSOCountry87, iSOCountry91, iSOCountry93, iSOCountry98, iSOCountry97, iSOCountry103, iSOCountry96, iSOCountry107, iSOCountry100, iSOCountry102, iSOCountry86, iSOCountry95, iSOCountry105, iSOCountry88, iSOCountry112, iSOCountry111, iSOCountry109, iSOCountry123, iSOCountry114, iSOCountry115, iSOCountry116, iSOCountry117, iSOCountry118, iSOCountry121, iSOCountry122, iSOCountry124, iSOCountry119, iSOCountry130, iSOCountry125, iSOCountry127, iSOCountry120, iSOCountry129, iSOCountry132, iSOCountry131, iSOCountry141, iSOCountry134, iSOCountry147, iSOCountry140, iSOCountry136, iSOCountry137, iSOCountry138, iSOCountry142, iSOCountry151, iSOCountry145, iSOCountry148, iSOCountry149, iSOCountry154, iSOCountry159, iSOCountry150, iSOCountry164, iSOCountry153, iSOCountry155, iSOCountry156, iSOCountry157, iSOCountry158, iSOCountry172, iSOCountry165, iSOCountry160, iSOCountry161, iSOCountry162, iSOCountry166, iSOCountry179, iSOCountry181, iSOCountry167, iSOCountry168, iSOCountry169, iSOCountry177, iSOCountry170, iSOCountry163, iSOCountry171, iSOCountry173, iSOCountry183, iSOCountry175, iSOCountry176, iSOCountry174, iSOCountry178, iSOCountry180, iSOCountry182, iSOCountry277, iSOCountry184, iSOCountry185, iSOCountry186, iSOCountry187, iSOCountry188, iSOCountry196, iSOCountry194, iSOCountry190, iSOCountry195, iSOCountry192, iSOCountry193, iSOCountry207, iSOCountry198, iSOCountry204, iSOCountry199, iSOCountry225, iSOCountry200, iSOCountry203, iSOCountry212, iSOCountry202, iSOCountry205, iSOCountry209, iSOCountry143, iSOCountry211, iSOCountry213, iSOCountry210, iSOCountry201, iSOCountry214, iSOCountry215, iSOCountry216, iSOCountry218, iSOCountry219, iSOCountry220, iSOCountry223, iSOCountry241, iSOCountry226, iSOCountry110, iSOCountry227, iSOCountry240, iSOCountry221, iSOCountry231, iSOCountry237, iSOCountry232, iSOCountry234, iSOCountry206, iSOCountry217, iSOCountry236, iSOCountry235, iSOCountry230, iSOCountry228, iSOCountry224, iSOCountry239, iSOCountry222, iSOCountry238, iSOCountry242, iSOCountry243, iSOCountry245, iSOCountry248, iSOCountry247, iSOCountry262, iSOCountry252, iSOCountry251, iSOCountry254, iSOCountry256, iSOCountry253, iSOCountry255, iSOCountry257, iSOCountry258, iSOCountry259, iSOCountry261, iSOCountry260, iSOCountry263, iSOCountry265, iSOCountry264, iSOCountry266, iSOCountry267, iSOCountry268, iSOCountry269, iSOCountry270, iSOCountry271, iSOCountry272, iSOCountry273, iSOCountry274, iSOCountry275, iSOCountry276, iSOCountry278, iSOCountry279, iSOCountry280};
    }

    private ISOCountry(int i11, String str, String str2, String str3) {
        this(i11, str, str2, str3, str3);
    }

    public static Country[] values() {
        return VALUES;
    }

    public int compareTo(Country country) {
        return toAlpha2Code().compareTo(country.toAlpha2Code());
    }

    public boolean equals(Object obj) {
        if (obj != null && obj.getClass().equals(getClass()) && ((ISOCountry) obj).code == this.code) {
            return true;
        }
        return false;
    }

    public String getName() {
        return this.name;
    }

    public String getNationality() {
        return this.nationality;
    }

    public int hashCode() {
        return this.code;
    }

    public String toAlpha2Code() {
        return this.alpha2Code;
    }

    public String toAlpha3Code() {
        return this.alpha3Code;
    }

    public String toString() {
        return this.alpha2Code;
    }

    public int valueOf() {
        return this.code;
    }

    private ISOCountry(int i11, String str, String str2, String str3, String str4) {
        this.code = i11;
        this.alpha2Code = str;
        this.alpha3Code = str2;
        this.name = str3;
        this.nationality = str4;
    }
}
